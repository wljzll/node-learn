// 1. 前端基本上不用考虑编码问题，但是对于后端来说，需要读取数据，操作文件，就需要用到编码
// 前端早期是不能操作文件的,就是无法操作二进制数据, node就实现了一个Buffer用于描述内存

// 2. 内存: 电脑中内存是以2进制值的形式表现的  Buffer是十六进制的, 十六进制的目的是为了短


// 基本的进制转换: node只支持utf-8,
// 对于utf-8来说,一个汉字3个字节
// 一个字节由8个位组成, 每个位上都是由一个二级制数字组成


// 3. 二进制转十进制: 当前位的值 * 当前进制 ^ (所在为 - 1) 累加的结果
// 11111111
// 1 * 2^7 + 1 * 2 ^6 + 1 * 2 ^5 + 1 * 2 ^4 + 1 * 2 ^3 + 1 * 2 ^2 + 1 * 2 ^1 + 1 * 2 ^0 = 255

// 4. 十进制整数转二进制：短除法，除以对应的要转成的进制，不断取余，反向输出余数
// 10
// 10 / 2 商5 余0
// 5 / 2  商2 余1
// 2 / 2  商1 余0
// 1 / 2  商0 余1
// 最后二进制数就是 1010

// 5. 各进制的标识：
// 2进制以0b开头
// 8进制以0o开头
// 16进制以0x开头

// 6. JS中的进制转换方法：parseInt(), toString()

// 6.1 parseInt(value, radix) - 将radix这个进制的value转换为10进制
console.log(parseInt('1010', 2)); // 将2进制的 1010转换为十进制 10

// 6.2 value.toString(radix) - 将value这个值转换为radix进制
console.log((0.5).toString(2)); // 1010


let buf2 = Buffer.from('珠峰');
console.log(buf2);